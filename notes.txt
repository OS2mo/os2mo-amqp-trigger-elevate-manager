Forretningslogik ved indkommende event:

1)
Hente alle engagementer for den employee, som er gjort til manager
baseret på UUID af manager-ændringen og hente den OU, hvor manager-ændringen
er sket (se mo.get_org_unit_levels)

Vi har nu UUID på den org enhed, hvor lederændringen er foretaget
OG org_unit_levels for alle enheder, som nu kan sammenlignes.

2)
Sammenligningen foretages ved at kalde
ou_levels.get_new_org_unit_for_engagement, som returnerer OU'en (Quicktype)
for den OU, hvor manageropdateringen blev foretaget (eller None, hvis
engagement ikke skal flyttes).

3)
mo.get_existing_managers kaldes for at se, om der findes eksisterende
managers (som skal termineres senere).

4)
Der laves et GraphQL mutator kald til MO (mo.update_manager_and_elevate_engagement), som
a) terminerer evt. eksisterende managers
b) Potentielt løfter engagementet for den nye manager


# Spørgsmål
Hvad hvis en employee bliver gjort til leder, men ikke har nogle eksisterende
engagementer i forvejen?

Hvad hvis en employee både har højere og lavere liggende engagementer?

Hvad med evt. fremtidige engagementer?

Hvad med hvis en leder slettes - hvad skal der ske med engamentet?

Hvad forstås der ved "højereliggende" enhed? Er det NY-niveauet eller
er der tale om dybden i træet?

Hvad med eksisterende ledere?